/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.meco.MainPages.Admin.RoomsPage;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.swing.JOptionPane;

import com.meco.DB.DB;
import com.meco.MainPages.Admin.adminUtils;
import com.meco.MainUtils.billing;

/**
 *
 * @author ashishkumar
 */
public class checkOutCustomer extends javax.swing.JFrame {

    /**
     * Creates new form checkOutCustomer
     */
    public checkOutCustomer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        checkOutLabel = new javax.swing.JLabel();
        roomNoLabel = new javax.swing.JLabel();
        roomNoField = new javax.swing.JTextField();
        checkOutDateLabel = new javax.swing.JLabel();
        getBillBtn = new javax.swing.JButton();
        checkOutBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        checkOutDate = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        checkOutLabel.setFont(new java.awt.Font("AppleGothic", 1, 48)); // NOI18N
        checkOutLabel.setText("Check-Out the Customer!");

        roomNoLabel.setFont(new java.awt.Font("AppleGothic", 0, 18)); // NOI18N
        roomNoLabel.setText("Room No");

        checkOutDateLabel.setFont(new java.awt.Font("AppleGothic", 0, 18)); // NOI18N
        checkOutDateLabel.setText("Check Out Date");

        getBillBtn.setBackground(new java.awt.Color(255, 255, 255));
        getBillBtn.setText("Get Bill");
        getBillBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getBillBtnActionPerformed(evt);
            }
        });

        checkOutBtn.setBackground(new java.awt.Color(255, 255, 255));
        checkOutBtn.setText("Check Out");
        checkOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(255, 255, 255));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(293, 293, 293)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(checkOutDateLabel)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(roomNoLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(checkOutDate, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                    .addComponent(roomNoField))
                .addGap(223, 223, 223))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(checkOutLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(229, 229, 229)
                                .addComponent(checkOutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(getBillBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(229, 229, 229)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backBtn)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(checkOutLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomNoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(roomNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkOutDateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(checkOutDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getBillBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkOutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(106, 106, 106)
                .addComponent(backBtn)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutBtnActionPerformed
        String roomNoString = roomNoField.getText();
        String roomStatus = DB.getRoomStatus(Integer.parseInt(roomNoString));
        boolean validRoomNumber = false;;
        if (!roomNoString.equals("0")) {
            for (int i : adminUtils.getRoomNumbers()) {
                if (roomNoString.equals(String.valueOf(i))) {validRoomNumber = true; break;}
            }
        }

        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        checkOutString = sdf.format(checkOutDate.getDate());

        Date storedCheckIn = null;
        Date storedCheckOut = null;
        Date checkOut = null;
        try {
            storedCheckIn = sdf.parse(DB.getCheckInDateFromDB(roomNoString));
            storedCheckOut = sdf.parse(DB.getCheckOutDateFromDB(roomNoString));
            checkOut = sdf.parse(checkOutString);
        } catch (ParseException e) {System.out.println(e.getMessage());}
        
        if (!validRoomNumber || !roomStatus.equals("1") || !roomNoString.equals(AdminRoomsPage.roomButton.getText())) { // roomStatus = 1 means the room is booked
            JOptionPane.showMessageDialog(null, "Please enter a valid room number!", "Invalid Input", 2);
        } else if (checkOut == null || checkOut.before(storedCheckIn)) {
            JOptionPane.showMessageDialog(null, "Please enter a valid date!", "Invalid Input", 2);
        } else if (checkOut.after(storedCheckOut)) {
            JOptionPane.showMessageDialog(null, "Entered date exceeds original date!", "Invalid Input", 2);
        } else {
            DB.deleteUser(Integer.parseInt(roomNoString)); // delete user from the roomData table
            DB.updateRoomStatus(Integer.parseInt(roomNoString), 0); // update room status to 0 i.e. available    
            this.dispose(); // go back to rooms page

            // generate bill and save it as a pdf
            bill = billing.generateBillAndSave(Integer.parseInt(roomNoField.getText()));
            System.out.println("a.o.k");
        }
    }//GEN-LAST:event_checkOutBtnActionPerformed

    private void getBillBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getBillBtnActionPerformed
        // generate bill and save it as a pdf
        bill = billing.generateBillAndSave(Integer.parseInt(roomNoField.getText()));
    }//GEN-LAST:event_getBillBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        AdminRoomsPage page = new AdminRoomsPage();
        page.setVisible(true);
        page.pack();
        page.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(checkOutCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(checkOutCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(checkOutCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(checkOutCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new checkOutCustomer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton checkOutBtn;
    private com.toedter.calendar.JDateChooser checkOutDate;
    private javax.swing.JLabel checkOutDateLabel;
    private javax.swing.JLabel checkOutLabel;
    private javax.swing.JButton getBillBtn;
    private javax.swing.JTextField roomNoField;
    private javax.swing.JLabel roomNoLabel;
    public static String checkOutString;
    public static String bill;
    // End of variables declaration//GEN-END:variables
}
